Shader "Custom/Test 1" {

	Properties {
		_Color ("Main Color", Color) = (1,1,1,1)
		_MainTex ("Base", 2D) = "white" {}
		_BumpMap ("Normalmap", 2D) = "bump" {}

		// Legacy
		//_Glossiness ("Glossiness", Range(0,1)) = 0.5		
		//_Specular ("Specular", Range(0,1)) = 0.5
		
		// Unity 5
		_Metallic ("Metallic", Range(0,1)) = 0.0
		_Smoothness ("Smoothness", Range(0,1)) = 0.0
	}

	SubShader {
        Tags {"Queue"="Transparent" "IgnoreProjector"="True" "RenderType"="Transparent"}
		LOD 200
		Cull Off    

		CGPROGRAM
	//	#pragma surface surf Lambert alpha:fade
		#pragma surface surf Standard fullforwardshadows alpha:blend 
		#pragma target 3.0

		sampler2D _MainTex;
		sampler2D _BumpMap;
		fixed4 _Color;
		
		// Legacy
		//half _Glossiness;
		//half _Specular;
		
		// Unity 5
		half _Metallic;
		half _Smoothness;

		struct Input {
			float2 uv_MainTex;
		    float2 uv_BumpMap;
		};

		void surf (Input IN, inout SurfaceOutputStandard o) {
			fixed4 c = tex2D(_MainTex, IN.uv_MainTex);
			o.Albedo = c.rgb * _Color.rgb;
			o.Alpha = c.a;

			// for packed textures
		    //o.Normal = UnpackNormal(tex2D(_BumpMap, IN.uv_BumpMap));

			// for unpacked textures (generated by code)
			// https://forum.unity.com/threads/creating-runtime-normal-maps-using-rendertotexture.135841/#post-924587
			o.Normal = tex2D(_BumpMap, IN.uv_BumpMap)*2-1;

			// Legacy
		    //o.Gloss = _Glossiness;
		    //o.Specular = _Specular;

			// Unity 5
		    o.Metallic = _Metallic;
		    o.Smoothness = _Smoothness;
		}
		
		ENDCG
	}
	Fallback "Diffuse"
}